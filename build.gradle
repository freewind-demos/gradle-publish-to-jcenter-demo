buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'java'

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile 'org.apache.commons:commons-lang3:3.4'
    testCompile 'junit:junit:4.11'
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
}

apply plugin: 'maven'

// Required for `maven`
group = "freewind.demos"
version = "0.1.0"

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'gradle-publish-to-maven-demo'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'My Library'
                description = 'A concise description of my library'
                url = 'http://www.example.com/library'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'johnd'
                        name = 'John Doe'
                        email = 'john.doe@example.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://example.com/my-library.git'
                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
                    url = 'http://example.com/my-library/'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8.1' //version required
}
